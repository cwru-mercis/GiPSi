// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:135

#ifndef _TAO_IDL_VISUALIZATIONC_H_
#define _TAO_IDL_VISUALIZATIONC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "visualization_common_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO VISUALIZATION_COMMON_Export

// TAO_IDL - Generated from 
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root_ch.cpp:62
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  class Collocation_Proxy_Broker;
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:57

enum CORBADisplayObjectType
{
  CORBAGIPSI_DRAW_POINT,
  CORBAGIPSI_DRAW_LINE,
  CORBAGIPSI_DRAW_TRIANGLE,
  CORBAGIPSI_DRAW_QUAD,
  CORBAGIPSI_DRAW_POLYGON,
  CORBAGIPSI_DRAW_CUSTOM
};

typedef CORBADisplayObjectType &CORBADisplayObjectType_out;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:57

enum CORBADisplayPolygonMode
{
  CORBAGIPSI_POLYGON_OUTLINE,
  CORBAGIPSI_POLYGON_FILL
};

typedef CORBADisplayPolygonMode &CORBADisplayPolygonMode_out;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/enum_ch.cpp:57

enum CORBADisplayShadeMode
{
  CORBAGIPSI_SHADE_FLAT,
  CORBAGIPSI_SHADE_SMOOTH
};

typedef CORBADisplayShadeMode &CORBADisplayShadeMode_out;

// TAO_IDL - Generated from
// .\be\be_type.cpp:269

struct CORBADisplayHeader;

typedef
  TAO_Fixed_Var_T<
      CORBADisplayHeader
    >
  CORBADisplayHeader_var;

typedef
  CORBADisplayHeader &
  CORBADisplayHeader_out;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57

struct VISUALIZATION_COMMON_Export CORBADisplayHeader
{
  typedef CORBADisplayHeader_var _var_type;
  typedef CORBADisplayHeader_out _out_type;
  
  
  CORBADisplayObjectType objType;
  CORBADisplayPolygonMode polyMode;
  CORBADisplayShadeMode shadeMode;
  ::CORBA::Char dataType;
  ::CORBA::Float pointSize;
  ::CORBA::Float lineSize;
};

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_FLOATVECTOR_CH_)
#define _FLOATVECTOR_CH_

class FloatVector;

typedef
  TAO_FixedSeq_Var_T<
      FloatVector
    >
  FloatVector_var;

typedef
  TAO_Seq_Out_T<
      FloatVector
    >
  FloatVector_out;

class VISUALIZATION_COMMON_Export FloatVector
  : public
      TAO::unbounded_value_sequence<
          ::CORBA::Float
        >
{
public:
  FloatVector (void);
  FloatVector ( ::CORBA::ULong max);
  FloatVector (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Float* buffer, 
      ::CORBA::Boolean release = false
    );
  FloatVector (const FloatVector &);
  virtual ~FloatVector (void);
  
  typedef FloatVector_var _var_type;
  typedef FloatVector_out _out_type;
  
  
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/sequence_ch.cpp:107

#if !defined (_LONGVECTOR_CH_)
#define _LONGVECTOR_CH_

class LongVector;

typedef
  TAO_FixedSeq_Var_T<
      LongVector
    >
  LongVector_var;

typedef
  TAO_Seq_Out_T<
      LongVector
    >
  LongVector_out;

class VISUALIZATION_COMMON_Export LongVector
  : public
      TAO::unbounded_value_sequence<
          ::CORBA::ULong
        >
{
public:
  LongVector (void);
  LongVector ( ::CORBA::ULong max);
  LongVector (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::ULong* buffer, 
      ::CORBA::Boolean release = false
    );
  LongVector (const LongVector &);
  virtual ~LongVector (void);
  
  typedef LongVector_var _var_type;
  typedef LongVector_out _out_type;
  
  
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// .\be\be_type.cpp:269

struct CORBADisplayArray;

typedef
  TAO_Var_Var_T<
      CORBADisplayArray
    >
  CORBADisplayArray_var;

typedef
  TAO_Out_T<
      CORBADisplayArray
    >
  CORBADisplayArray_out;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/structure_ch.cpp:57

struct VISUALIZATION_COMMON_Export CORBADisplayArray
{
  typedef CORBADisplayArray_var _var_type;
  typedef CORBADisplayArray_out _out_type;
  
  
  CORBADisplayHeader header;
  ::CORBA::Long DISPARRAY_NODESIZE;
  ::CORBA::Long dA_size;
  ::CORBA::ULong iA_size;
  FloatVector dispArray;
  LongVector indexArray;
  ::CORBA::Boolean full;
};

// TAO_IDL - Generated from
// .\be\be_interface.cpp:638

#if !defined (_CORBASKP__VAR_OUT_CH_)
#define _CORBASKP__VAR_OUT_CH_

class CORBASKP;
typedef CORBASKP *CORBASKP_ptr;

typedef
  TAO_Objref_Var_T<
      CORBASKP
    >
  CORBASKP_var;

typedef
  TAO_Objref_Out_T<
      CORBASKP
    >
  CORBASKP_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBASKP_CH_)
#define _CORBASKP_CH_

class VISUALIZATION_COMMON_Export CORBASKP
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<CORBASKP>;
  typedef CORBASKP_ptr _ptr_type;
  typedef CORBASKP_var _var_type;
  typedef CORBASKP_out _out_type;
  
  // The static operations.
  static CORBASKP_ptr _duplicate (CORBASKP_ptr obj);
  
  static void _tao_release (CORBASKP_ptr obj);
  
  static CORBASKP_ptr _narrow (::CORBA::Object_ptr obj);
  static CORBASKP_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static CORBASKP_ptr _nil (void)
  {
    return static_cast<CORBASKP_ptr> (0);
  }
  
  
  
  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_ch.cpp:46
  
  virtual ::CORBA::Short setArray (
      const char * displayBufferName,
      const ::CORBADisplayArray & displayArray);
  
  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_ch.cpp:216
  
  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
private:
  TAO::Collocation_Proxy_Broker *the_TAO_CORBASKP_Proxy_Broker_;

protected:
  // Concrete interface only.
  CORBASKP (void);
  
  // These methods travese the inheritance tree and set the
  // parents piece of the given class in the right mode.
  virtual void CORBASKP_setup_collocation (void);
  
  // Concrete non-local interface only.
  CORBASKP (
      IOP::IOR *ior,
      TAO_ORB_Core *orb_core = 0);
  
  // Non-local interface only.
  CORBASKP (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);
  
  virtual ~CORBASKP (void);

private:
  // Private and unimplemented for concrete interfaces.
  CORBASKP (const CORBASKP &);
  
  void operator= (const CORBASKP &);
};

#endif /* end #if !defined */

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_root/root.cpp:139

extern VISUALIZATION_COMMON_Export
TAO::Collocation_Proxy_Broker *
(*_TAO_CORBASKP_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// .\be\be_visitor_traits.cpp:64

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CORBASKP__TRAITS_)
#define _CORBASKP__TRAITS_
  
  template<>
  struct VISUALIZATION_COMMON_Export Objref_Traits< ::CORBASKP>
  {
    static ::CORBASKP_ptr duplicate (
        ::CORBASKP_ptr
      );
    static void release (
        ::CORBASKP_ptr
      );
    static ::CORBASKP_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CORBASKP_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

VISUALIZATION_COMMON_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CORBADisplayObjectType _tao_enumerator);
VISUALIZATION_COMMON_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBADisplayObjectType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

VISUALIZATION_COMMON_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CORBADisplayPolygonMode _tao_enumerator);
VISUALIZATION_COMMON_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBADisplayPolygonMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_enum/cdr_op_ch.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

VISUALIZATION_COMMON_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, CORBADisplayShadeMode _tao_enumerator);
VISUALIZATION_COMMON_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBADisplayShadeMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

VISUALIZATION_COMMON_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBADisplayHeader &);
VISUALIZATION_COMMON_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBADisplayHeader &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_FloatVector_H_
#define _TAO_CDR_OP_FloatVector_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



VISUALIZATION_COMMON_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const FloatVector &_tao_sequence
  );
VISUALIZATION_COMMON_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    FloatVector &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_FloatVector_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_LongVector_H_
#define _TAO_CDR_OP_LongVector_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



VISUALIZATION_COMMON_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const LongVector &_tao_sequence
  );
VISUALIZATION_COMMON_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    LongVector &_tao_sequence
  );
TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_LongVector_H_ */

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_structure/cdr_op_ch.cpp:54


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

VISUALIZATION_COMMON_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBADisplayArray &);
VISUALIZATION_COMMON_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBADisplayArray &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

VISUALIZATION_COMMON_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBASKP_ptr );
VISUALIZATION_COMMON_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, CORBASKP_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// .\be\be_codegen.cpp:1219
#if defined (__ACE_INLINE__)
#include "VisualizationC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */


