// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:381


#include "GiPSiNetSKC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "GiPSiNetSKC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// .\be\be_visitor_arg_traits.cpp:73

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBAGIPSINETSK.

CORBAGIPSINETSK_ptr
TAO::Objref_Traits<CORBAGIPSINETSK>::duplicate (
    CORBAGIPSINETSK_ptr p)
{
  return CORBAGIPSINETSK::_duplicate (p);
}

void
TAO::Objref_Traits<CORBAGIPSINETSK>::release (
    CORBAGIPSINETSK_ptr p)
{
  ::CORBA::release (p);
}

CORBAGIPSINETSK_ptr
TAO::Objref_Traits<CORBAGIPSINETSK>::nil (void)
{
  return CORBAGIPSINETSK::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CORBAGIPSINETSK>::marshal (
    const CORBAGIPSINETSK_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*_TAO_CORBAGIPSINETSK_Proxy_Broker_Factory_function_pointer) (
    ::CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_cs.cpp:78

void CORBAGIPSINETSK::getProjectXML (
    const char * filename,
    ::CORBA::String_out xmldata)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_ == 0)
    {
      CORBAGIPSINETSK_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_filename (filename);
  TAO::Arg_Traits< ::CORBA::Char *>::out_arg_val _tao_xmldata (xmldata);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_filename,
      &_tao_xmldata
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "getProjectXML",
      13,
      this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_cs.cpp:78

void CORBAGIPSINETSK::loadedProject (
    const char * filename)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_ == 0)
    {
      CORBAGIPSINETSK_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_filename (filename);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_filename
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "loadedProject",
      13,
      this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_cs.cpp:78

void CORBAGIPSINETSK::startedService (
    const char * service,
    const char * nameservice)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_ == 0)
    {
      CORBAGIPSINETSK_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_service (service);
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_nameservice (nameservice);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_service,
      &_tao_nameservice
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "startedService",
      14,
      this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_cs.cpp:78

void CORBAGIPSINETSK::setUICommand (
    const char * command)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_ == 0)
    {
      CORBAGIPSINETSK_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_command (command);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_command
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setUICommand",
      12,
      this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_cs.cpp:78

void CORBAGIPSINETSK::closeConnection (
    const char * service)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_ == 0)
    {
      CORBAGIPSINETSK_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::in_arg_val _tao_service (service);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_service
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "closeConnection",
      15,
      this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
}

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_cs.cpp:78

void CORBAGIPSINETSK::testConnection (
    char *& data)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  if (this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_ == 0)
    {
      CORBAGIPSINETSK_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Char *>::inout_arg_val _tao_data (data);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_data
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "testConnection",
      14,
      this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0);
}

CORBAGIPSINETSK::CORBAGIPSINETSK (void)
 : the_TAO_CORBAGIPSINETSK_Proxy_Broker_ (0)
{
  this->CORBAGIPSINETSK_setup_collocation ();
}

void
CORBAGIPSINETSK::CORBAGIPSINETSK_setup_collocation ()
{
  if (::_TAO_CORBAGIPSINETSK_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_CORBAGIPSINETSK_Proxy_Broker_ =
        ::_TAO_CORBAGIPSINETSK_Proxy_Broker_Factory_function_pointer (this);
    }
}

CORBAGIPSINETSK::~CORBAGIPSINETSK (void)
{}

CORBAGIPSINETSK_ptr
CORBAGIPSINETSK::_narrow (
    ::CORBA::Object_ptr _tao_objref
  )
{
  return
    TAO::Narrow_Utils<CORBAGIPSINETSK>::narrow (
        _tao_objref,
        "IDL:CORBAGIPSINETSK:1.0",
        _TAO_CORBAGIPSINETSK_Proxy_Broker_Factory_function_pointer
      );
}

CORBAGIPSINETSK_ptr
CORBAGIPSINETSK::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref
  )
{
  return
    TAO::Narrow_Utils<CORBAGIPSINETSK>::unchecked_narrow (
        _tao_objref,
        "IDL:CORBAGIPSINETSK:1.0",
        _TAO_CORBAGIPSINETSK_Proxy_Broker_Factory_function_pointer
      );
}

CORBAGIPSINETSK_ptr
CORBAGIPSINETSK::_duplicate (CORBAGIPSINETSK_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void
CORBAGIPSINETSK::_tao_release (CORBAGIPSINETSK_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CORBAGIPSINETSK::_is_a (const char *value)
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:CORBAGIPSINETSK:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* CORBAGIPSINETSK::_interface_repository_id (void) const
{
  return "IDL:CORBAGIPSINETSK:1.0";
}

::CORBA::Boolean
CORBAGIPSINETSK::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/cdr_op_cs.cpp:63

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBAGIPSINETSK_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBAGIPSINETSK_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBAGIPSINETSK RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        _TAO_CORBAGIPSINETSK_Proxy_Broker_Factory_function_pointer
      );
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



