// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// .\be\be_codegen.cpp:487

#ifndef _TAO_IDL_VISUALIZATIONS_H_
#define _TAO_IDL_VISUALIZATIONS_H_

#include /**/ "ace/pre.h"

#include "VisualizationC.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Collocation_Proxy_Broker.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// c:\ace_wrappers\tao\tao_idl\be\be_visitor_interface/interface_sh.cpp:87

class POA_CORBASKP;
typedef POA_CORBASKP *POA_CORBASKP_ptr;

class VISUALIZATION_COMMON_Export POA_CORBASKP
  : public virtual PortableServer::ServantBase
{
protected:
  POA_CORBASKP (void);

public:
  // Useful for template programming.
  typedef ::CORBASKP _stub_type;
  typedef ::CORBASKP_ptr _stub_ptr_type;
  typedef ::CORBASKP_var _stub_var_type;
  
  POA_CORBASKP (const POA_CORBASKP& rhs);
  virtual ~POA_CORBASKP (void);
  
  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);
  
  static void _is_a_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant
    );
  
  static void _non_existent_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant
    );
  
  static void _interface_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant
    );
  
  static void _component_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant
    );
  
  static void _repository_id_skel (
      TAO_ServerRequest & req,
      void * servant_upcall,
      void * servant);
  
  virtual void _dispatch (
      TAO_ServerRequest & req,
      void * servant_upcall);
  
  ::CORBASKP *_this (void);
  
  virtual const char* _interface_repository_id (void) const;
  
  // TAO_IDL - Generated from
  // c:\ace_wrappers\tao\tao_idl\be\be_visitor_operation/operation_sh.cpp:45
  
  virtual ::CORBA::Short setArray (
      const char * displayBufferName,
      const ::CORBADisplayArray & displayArray) = 0;
  
  static void setArray_skel (
      TAO_ServerRequest & server_request,
      void * servant_upcall,
      void * servant
    );
};

// TAO_IDL - Generated from 
// .\be\be_codegen.cpp:1281


#if defined (__ACE_INLINE__)
#include "VisualizationS.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"
#endif /* ifndef */

